"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

require("source-map-support/register");

var _makerBase = _interopRequireDefault(require("@electron-forge/maker-base"));

var _path = _interopRequireDefault(require("path"));

var _util = require("util");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

class MakerZIP extends _makerBase.default {
  constructor(...args) {
    super(...args);

    _defineProperty(this, "name", 'zip');

    _defineProperty(this, "defaultPlatforms", ['darwin', 'mas', 'win32', 'linux']);
  }

  isSupportedOnCurrentPlatform() {
    return true;
  }

  async make({
    dir,
    makeDir,
    appName,
    packageJSON,
    targetArch,
    targetPlatform
  }) {
    // eslint-disable-next-line global-require
    const {
      zip
    } = require('cross-zip');

    const zipDir = ['darwin', 'mas'].includes(targetPlatform) ? _path.default.resolve(dir, `${appName}.app`) : dir;

    const zipPath = _path.default.resolve(makeDir, 'zip', targetPlatform, targetArch, `${_path.default.basename(dir)}-${packageJSON.version}.zip`);

    await this.ensureFile(zipPath);
    await (0, _util.promisify)(zip)(zipDir, zipPath);
    return [zipPath];
  }

}

exports.default = MakerZIP;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9NYWtlclpJUC50cyJdLCJuYW1lcyI6WyJNYWtlclpJUCIsIk1ha2VyQmFzZSIsImlzU3VwcG9ydGVkT25DdXJyZW50UGxhdGZvcm0iLCJtYWtlIiwiZGlyIiwibWFrZURpciIsImFwcE5hbWUiLCJwYWNrYWdlSlNPTiIsInRhcmdldEFyY2giLCJ0YXJnZXRQbGF0Zm9ybSIsInppcCIsInJlcXVpcmUiLCJ6aXBEaXIiLCJpbmNsdWRlcyIsInBhdGgiLCJyZXNvbHZlIiwiemlwUGF0aCIsImJhc2VuYW1lIiwidmVyc2lvbiIsImVuc3VyZUZpbGUiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFBOztBQUdBOztBQUNBOzs7Ozs7QUFJZSxNQUFNQSxRQUFOLFNBQXVCQyxrQkFBdkIsQ0FBaUQ7QUFBQTtBQUFBOztBQUFBLGtDQUN2RCxLQUR1RDs7QUFBQSw4Q0FHMUIsQ0FBQyxRQUFELEVBQVcsS0FBWCxFQUFrQixPQUFsQixFQUEyQixPQUEzQixDQUgwQjtBQUFBOztBQUs5REMsRUFBQUEsNEJBQTRCLEdBQUc7QUFDN0IsV0FBTyxJQUFQO0FBQ0Q7O0FBRVMsUUFBSkMsSUFBSSxDQUFDO0FBQ1RDLElBQUFBLEdBRFM7QUFFVEMsSUFBQUEsT0FGUztBQUdUQyxJQUFBQSxPQUhTO0FBSVRDLElBQUFBLFdBSlM7QUFLVEMsSUFBQUEsVUFMUztBQU1UQyxJQUFBQTtBQU5TLEdBQUQsRUFPTztBQUNmO0FBQ0EsVUFBTTtBQUFFQyxNQUFBQTtBQUFGLFFBQVVDLE9BQU8sQ0FBQyxXQUFELENBQXZCOztBQUVBLFVBQU1DLE1BQU0sR0FBRyxDQUFDLFFBQUQsRUFBVyxLQUFYLEVBQWtCQyxRQUFsQixDQUEyQkosY0FBM0IsSUFBNkNLLGNBQUtDLE9BQUwsQ0FBYVgsR0FBYixFQUFtQixHQUFFRSxPQUFRLE1BQTdCLENBQTdDLEdBQW1GRixHQUFsRzs7QUFFQSxVQUFNWSxPQUFPLEdBQUdGLGNBQUtDLE9BQUwsQ0FBYVYsT0FBYixFQUFzQixLQUF0QixFQUE2QkksY0FBN0IsRUFBNkNELFVBQTdDLEVBQTBELEdBQUVNLGNBQUtHLFFBQUwsQ0FBY2IsR0FBZCxDQUFtQixJQUFHRyxXQUFXLENBQUNXLE9BQVEsTUFBdEcsQ0FBaEI7O0FBRUEsVUFBTSxLQUFLQyxVQUFMLENBQWdCSCxPQUFoQixDQUFOO0FBQ0EsVUFBTSxxQkFBVU4sR0FBVixFQUFlRSxNQUFmLEVBQXVCSSxPQUF2QixDQUFOO0FBRUEsV0FBTyxDQUFDQSxPQUFELENBQVA7QUFDRDs7QUE1QjZEIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IE1ha2VyQmFzZSwgeyBNYWtlck9wdGlvbnMgfSBmcm9tICdAZWxlY3Ryb24tZm9yZ2UvbWFrZXItYmFzZSc7XG5pbXBvcnQgeyBGb3JnZVBsYXRmb3JtIH0gZnJvbSAnQGVsZWN0cm9uLWZvcmdlL3NoYXJlZC10eXBlcyc7XG5cbmltcG9ydCBwYXRoIGZyb20gJ3BhdGgnO1xuaW1wb3J0IHsgcHJvbWlzaWZ5IH0gZnJvbSAndXRpbCc7XG5cbmV4cG9ydCB0eXBlIE1ha2VyWklQQ29uZmlnID0ge307XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIE1ha2VyWklQIGV4dGVuZHMgTWFrZXJCYXNlPE1ha2VyWklQQ29uZmlnPiB7XG4gIG5hbWUgPSAnemlwJztcblxuICBkZWZhdWx0UGxhdGZvcm1zOiBGb3JnZVBsYXRmb3JtW10gPSBbJ2RhcndpbicsICdtYXMnLCAnd2luMzInLCAnbGludXgnXTtcblxuICBpc1N1cHBvcnRlZE9uQ3VycmVudFBsYXRmb3JtKCkge1xuICAgIHJldHVybiB0cnVlO1xuICB9XG5cbiAgYXN5bmMgbWFrZSh7XG4gICAgZGlyLFxuICAgIG1ha2VEaXIsXG4gICAgYXBwTmFtZSxcbiAgICBwYWNrYWdlSlNPTixcbiAgICB0YXJnZXRBcmNoLFxuICAgIHRhcmdldFBsYXRmb3JtLFxuICB9OiBNYWtlck9wdGlvbnMpIHtcbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgZ2xvYmFsLXJlcXVpcmVcbiAgICBjb25zdCB7IHppcCB9ID0gcmVxdWlyZSgnY3Jvc3MtemlwJyk7XG5cbiAgICBjb25zdCB6aXBEaXIgPSBbJ2RhcndpbicsICdtYXMnXS5pbmNsdWRlcyh0YXJnZXRQbGF0Zm9ybSkgPyBwYXRoLnJlc29sdmUoZGlyLCBgJHthcHBOYW1lfS5hcHBgKSA6IGRpcjtcblxuICAgIGNvbnN0IHppcFBhdGggPSBwYXRoLnJlc29sdmUobWFrZURpciwgJ3ppcCcsIHRhcmdldFBsYXRmb3JtLCB0YXJnZXRBcmNoLCBgJHtwYXRoLmJhc2VuYW1lKGRpcil9LSR7cGFja2FnZUpTT04udmVyc2lvbn0uemlwYCk7XG5cbiAgICBhd2FpdCB0aGlzLmVuc3VyZUZpbGUoemlwUGF0aCk7XG4gICAgYXdhaXQgcHJvbWlzaWZ5KHppcCkoemlwRGlyLCB6aXBQYXRoKTtcblxuICAgIHJldHVybiBbemlwUGF0aF07XG4gIH1cbn1cbiJdfQ==