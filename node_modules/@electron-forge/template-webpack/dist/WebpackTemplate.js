"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

require("source-map-support/register");

var _asyncOra = require("@electron-forge/async-ora");

var _templateBase = require("@electron-forge/template-base");

var _fsExtra = _interopRequireDefault(require("fs-extra"));

var _path = _interopRequireDefault(require("path"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

// TODO: Use the @zeit publish once https://github.com/zeit/webpack-asset-relocator-loader/pull/41 has been merged
class WebpackTemplate extends _templateBase.BaseTemplate {
  constructor(...args) {
    super(...args);

    _defineProperty(this, "templateDir", _path.default.resolve(__dirname, '..', 'tmpl'));
  }

  async initializeTemplate(directory, options) {
    await super.initializeTemplate(directory, options);
    await (0, _asyncOra.asyncOra)('Setting up Forge configuration', async () => {
      const pjPath = _path.default.resolve(directory, 'package.json');

      const currentPJ = await _fsExtra.default.readJson(pjPath);
      currentPJ.main = '.webpack/main';
      currentPJ.config.forge.plugins = currentPJ.config.forge.plugins || [];
      currentPJ.config.forge.plugins.push(['@electron-forge/plugin-webpack', {
        mainConfig: './webpack.main.config.js',
        renderer: {
          config: './webpack.renderer.config.js',
          entryPoints: [{
            html: './src/index.html',
            js: './src/renderer.js',
            name: 'main_window'
          }]
        }
      }]);
      await _fsExtra.default.writeJson(pjPath, currentPJ, {
        spaces: 2
      });
    });
    await (0, _asyncOra.asyncOra)('Setting up webpack configuration', async () => {
      await this.copyTemplateFile(directory, 'webpack.main.config.js');
      await this.copyTemplateFile(directory, 'webpack.renderer.config.js');
      await this.copyTemplateFile(directory, 'webpack.rules.js');
      await this.copyTemplateFile(_path.default.join(directory, 'src'), 'renderer.js');
      await this.updateFileByLine(_path.default.resolve(directory, 'src', 'index.js'), line => {
        if (line.includes('mainWindow.loadFile')) return '  mainWindow.loadURL(MAIN_WINDOW_WEBPACK_ENTRY);';
        return line;
      }, _path.default.resolve(directory, 'src', 'main.js'));
      await this.updateFileByLine(_path.default.resolve(directory, 'src', 'index.html'), line => {
        if (line.includes('link rel="stylesheet"')) return '';
        return line;
      });
    });
  }

}

var _default = new WebpackTemplate();

exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9XZWJwYWNrVGVtcGxhdGUudHMiXSwibmFtZXMiOlsiV2VicGFja1RlbXBsYXRlIiwiQmFzZVRlbXBsYXRlIiwicGF0aCIsInJlc29sdmUiLCJfX2Rpcm5hbWUiLCJpbml0aWFsaXplVGVtcGxhdGUiLCJkaXJlY3RvcnkiLCJvcHRpb25zIiwicGpQYXRoIiwiY3VycmVudFBKIiwiZnMiLCJyZWFkSnNvbiIsIm1haW4iLCJjb25maWciLCJmb3JnZSIsInBsdWdpbnMiLCJwdXNoIiwibWFpbkNvbmZpZyIsInJlbmRlcmVyIiwiZW50cnlQb2ludHMiLCJodG1sIiwianMiLCJuYW1lIiwid3JpdGVKc29uIiwic3BhY2VzIiwiY29weVRlbXBsYXRlRmlsZSIsImpvaW4iLCJ1cGRhdGVGaWxlQnlMaW5lIiwibGluZSIsImluY2x1ZGVzIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBQTs7QUFDQTs7QUFDQTs7QUFFQTs7Ozs7O0FBRUE7QUFDQSxNQUFNQSxlQUFOLFNBQThCQywwQkFBOUIsQ0FBMkM7QUFBQTtBQUFBOztBQUFBLHlDQUNwQkMsY0FBS0MsT0FBTCxDQUFhQyxTQUFiLEVBQXdCLElBQXhCLEVBQThCLE1BQTlCLENBRG9CO0FBQUE7O0FBR1YsUUFBbEJDLGtCQUFrQixDQUFDQyxTQUFELEVBQW9CQyxPQUFwQixFQUFrRDtBQUMvRSxVQUFNLE1BQU1GLGtCQUFOLENBQXlCQyxTQUF6QixFQUFvQ0MsT0FBcEMsQ0FBTjtBQUNBLFVBQU0sd0JBQVMsZ0NBQVQsRUFBMkMsWUFBWTtBQUMzRCxZQUFNQyxNQUFNLEdBQUdOLGNBQUtDLE9BQUwsQ0FBYUcsU0FBYixFQUF3QixjQUF4QixDQUFmOztBQUNBLFlBQU1HLFNBQVMsR0FBRyxNQUFNQyxpQkFBR0MsUUFBSCxDQUFZSCxNQUFaLENBQXhCO0FBQ0FDLE1BQUFBLFNBQVMsQ0FBQ0csSUFBVixHQUFpQixlQUFqQjtBQUNBSCxNQUFBQSxTQUFTLENBQUNJLE1BQVYsQ0FBaUJDLEtBQWpCLENBQXVCQyxPQUF2QixHQUFpQ04sU0FBUyxDQUFDSSxNQUFWLENBQWlCQyxLQUFqQixDQUF1QkMsT0FBdkIsSUFBa0MsRUFBbkU7QUFDQU4sTUFBQUEsU0FBUyxDQUFDSSxNQUFWLENBQWlCQyxLQUFqQixDQUF1QkMsT0FBdkIsQ0FBK0JDLElBQS9CLENBQW9DLENBQ2xDLGdDQURrQyxFQUVsQztBQUNFQyxRQUFBQSxVQUFVLEVBQUUsMEJBRGQ7QUFFRUMsUUFBQUEsUUFBUSxFQUFFO0FBQ1JMLFVBQUFBLE1BQU0sRUFBRSw4QkFEQTtBQUVSTSxVQUFBQSxXQUFXLEVBQUUsQ0FBQztBQUNaQyxZQUFBQSxJQUFJLEVBQUUsa0JBRE07QUFFWkMsWUFBQUEsRUFBRSxFQUFFLG1CQUZRO0FBR1pDLFlBQUFBLElBQUksRUFBRTtBQUhNLFdBQUQ7QUFGTDtBQUZaLE9BRmtDLENBQXBDO0FBY0EsWUFBTVosaUJBQUdhLFNBQUgsQ0FBYWYsTUFBYixFQUFxQkMsU0FBckIsRUFBZ0M7QUFDcENlLFFBQUFBLE1BQU0sRUFBRTtBQUQ0QixPQUFoQyxDQUFOO0FBR0QsS0F0QkssQ0FBTjtBQXVCQSxVQUFNLHdCQUFTLGtDQUFULEVBQTZDLFlBQVk7QUFDN0QsWUFBTSxLQUFLQyxnQkFBTCxDQUFzQm5CLFNBQXRCLEVBQWlDLHdCQUFqQyxDQUFOO0FBQ0EsWUFBTSxLQUFLbUIsZ0JBQUwsQ0FBc0JuQixTQUF0QixFQUFpQyw0QkFBakMsQ0FBTjtBQUNBLFlBQU0sS0FBS21CLGdCQUFMLENBQXNCbkIsU0FBdEIsRUFBaUMsa0JBQWpDLENBQU47QUFDQSxZQUFNLEtBQUttQixnQkFBTCxDQUFzQnZCLGNBQUt3QixJQUFMLENBQVVwQixTQUFWLEVBQXFCLEtBQXJCLENBQXRCLEVBQW1ELGFBQW5ELENBQU47QUFFQSxZQUFNLEtBQUtxQixnQkFBTCxDQUFzQnpCLGNBQUtDLE9BQUwsQ0FBYUcsU0FBYixFQUF3QixLQUF4QixFQUErQixVQUEvQixDQUF0QixFQUFtRXNCLElBQUQsSUFBVTtBQUNoRixZQUFJQSxJQUFJLENBQUNDLFFBQUwsQ0FBYyxxQkFBZCxDQUFKLEVBQTBDLE9BQU8sa0RBQVA7QUFDMUMsZUFBT0QsSUFBUDtBQUNELE9BSEssRUFHSDFCLGNBQUtDLE9BQUwsQ0FBYUcsU0FBYixFQUF3QixLQUF4QixFQUErQixTQUEvQixDQUhHLENBQU47QUFLQSxZQUFNLEtBQUtxQixnQkFBTCxDQUFzQnpCLGNBQUtDLE9BQUwsQ0FBYUcsU0FBYixFQUF3QixLQUF4QixFQUErQixZQUEvQixDQUF0QixFQUFxRXNCLElBQUQsSUFBVTtBQUNsRixZQUFJQSxJQUFJLENBQUNDLFFBQUwsQ0FBYyx1QkFBZCxDQUFKLEVBQTRDLE9BQU8sRUFBUDtBQUM1QyxlQUFPRCxJQUFQO0FBQ0QsT0FISyxDQUFOO0FBSUQsS0FmSyxDQUFOO0FBZ0JEOztBQTVDd0M7O2VBK0M1QixJQUFJNUIsZUFBSixFIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgYXN5bmNPcmEgfSBmcm9tICdAZWxlY3Ryb24tZm9yZ2UvYXN5bmMtb3JhJztcbmltcG9ydCB7IEJhc2VUZW1wbGF0ZSB9IGZyb20gJ0BlbGVjdHJvbi1mb3JnZS90ZW1wbGF0ZS1iYXNlJztcbmltcG9ydCBmcyBmcm9tICdmcy1leHRyYSc7XG5pbXBvcnQgeyBJbml0VGVtcGxhdGVPcHRpb25zIH0gZnJvbSAnQGVsZWN0cm9uLWZvcmdlL3NoYXJlZC10eXBlcyc7XG5pbXBvcnQgcGF0aCBmcm9tICdwYXRoJztcblxuLy8gVE9ETzogVXNlIHRoZSBAemVpdCBwdWJsaXNoIG9uY2UgaHR0cHM6Ly9naXRodWIuY29tL3plaXQvd2VicGFjay1hc3NldC1yZWxvY2F0b3ItbG9hZGVyL3B1bGwvNDEgaGFzIGJlZW4gbWVyZ2VkXG5jbGFzcyBXZWJwYWNrVGVtcGxhdGUgZXh0ZW5kcyBCYXNlVGVtcGxhdGUge1xuICBwdWJsaWMgdGVtcGxhdGVEaXIgPSBwYXRoLnJlc29sdmUoX19kaXJuYW1lLCAnLi4nLCAndG1wbCcpO1xuXG4gIHB1YmxpYyBhc3luYyBpbml0aWFsaXplVGVtcGxhdGUoZGlyZWN0b3J5OiBzdHJpbmcsIG9wdGlvbnM6IEluaXRUZW1wbGF0ZU9wdGlvbnMpIHtcbiAgICBhd2FpdCBzdXBlci5pbml0aWFsaXplVGVtcGxhdGUoZGlyZWN0b3J5LCBvcHRpb25zKTtcbiAgICBhd2FpdCBhc3luY09yYSgnU2V0dGluZyB1cCBGb3JnZSBjb25maWd1cmF0aW9uJywgYXN5bmMgKCkgPT4ge1xuICAgICAgY29uc3QgcGpQYXRoID0gcGF0aC5yZXNvbHZlKGRpcmVjdG9yeSwgJ3BhY2thZ2UuanNvbicpO1xuICAgICAgY29uc3QgY3VycmVudFBKID0gYXdhaXQgZnMucmVhZEpzb24ocGpQYXRoKTtcbiAgICAgIGN1cnJlbnRQSi5tYWluID0gJy53ZWJwYWNrL21haW4nO1xuICAgICAgY3VycmVudFBKLmNvbmZpZy5mb3JnZS5wbHVnaW5zID0gY3VycmVudFBKLmNvbmZpZy5mb3JnZS5wbHVnaW5zIHx8IFtdO1xuICAgICAgY3VycmVudFBKLmNvbmZpZy5mb3JnZS5wbHVnaW5zLnB1c2goW1xuICAgICAgICAnQGVsZWN0cm9uLWZvcmdlL3BsdWdpbi13ZWJwYWNrJyxcbiAgICAgICAge1xuICAgICAgICAgIG1haW5Db25maWc6ICcuL3dlYnBhY2subWFpbi5jb25maWcuanMnLFxuICAgICAgICAgIHJlbmRlcmVyOiB7XG4gICAgICAgICAgICBjb25maWc6ICcuL3dlYnBhY2sucmVuZGVyZXIuY29uZmlnLmpzJyxcbiAgICAgICAgICAgIGVudHJ5UG9pbnRzOiBbe1xuICAgICAgICAgICAgICBodG1sOiAnLi9zcmMvaW5kZXguaHRtbCcsXG4gICAgICAgICAgICAgIGpzOiAnLi9zcmMvcmVuZGVyZXIuanMnLFxuICAgICAgICAgICAgICBuYW1lOiAnbWFpbl93aW5kb3cnLFxuICAgICAgICAgICAgfV0sXG4gICAgICAgICAgfSxcbiAgICAgICAgfSxcbiAgICAgIF0pO1xuICAgICAgYXdhaXQgZnMud3JpdGVKc29uKHBqUGF0aCwgY3VycmVudFBKLCB7XG4gICAgICAgIHNwYWNlczogMixcbiAgICAgIH0pO1xuICAgIH0pO1xuICAgIGF3YWl0IGFzeW5jT3JhKCdTZXR0aW5nIHVwIHdlYnBhY2sgY29uZmlndXJhdGlvbicsIGFzeW5jICgpID0+IHtcbiAgICAgIGF3YWl0IHRoaXMuY29weVRlbXBsYXRlRmlsZShkaXJlY3RvcnksICd3ZWJwYWNrLm1haW4uY29uZmlnLmpzJyk7XG4gICAgICBhd2FpdCB0aGlzLmNvcHlUZW1wbGF0ZUZpbGUoZGlyZWN0b3J5LCAnd2VicGFjay5yZW5kZXJlci5jb25maWcuanMnKTtcbiAgICAgIGF3YWl0IHRoaXMuY29weVRlbXBsYXRlRmlsZShkaXJlY3RvcnksICd3ZWJwYWNrLnJ1bGVzLmpzJyk7XG4gICAgICBhd2FpdCB0aGlzLmNvcHlUZW1wbGF0ZUZpbGUocGF0aC5qb2luKGRpcmVjdG9yeSwgJ3NyYycpLCAncmVuZGVyZXIuanMnKTtcblxuICAgICAgYXdhaXQgdGhpcy51cGRhdGVGaWxlQnlMaW5lKHBhdGgucmVzb2x2ZShkaXJlY3RvcnksICdzcmMnLCAnaW5kZXguanMnKSwgKGxpbmUpID0+IHtcbiAgICAgICAgaWYgKGxpbmUuaW5jbHVkZXMoJ21haW5XaW5kb3cubG9hZEZpbGUnKSkgcmV0dXJuICcgIG1haW5XaW5kb3cubG9hZFVSTChNQUlOX1dJTkRPV19XRUJQQUNLX0VOVFJZKTsnO1xuICAgICAgICByZXR1cm4gbGluZTtcbiAgICAgIH0sIHBhdGgucmVzb2x2ZShkaXJlY3RvcnksICdzcmMnLCAnbWFpbi5qcycpKTtcblxuICAgICAgYXdhaXQgdGhpcy51cGRhdGVGaWxlQnlMaW5lKHBhdGgucmVzb2x2ZShkaXJlY3RvcnksICdzcmMnLCAnaW5kZXguaHRtbCcpLCAobGluZSkgPT4ge1xuICAgICAgICBpZiAobGluZS5pbmNsdWRlcygnbGluayByZWw9XCJzdHlsZXNoZWV0XCInKSkgcmV0dXJuICcnO1xuICAgICAgICByZXR1cm4gbGluZTtcbiAgICAgIH0pO1xuICAgIH0pO1xuICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IG5ldyBXZWJwYWNrVGVtcGxhdGUoKTtcbiJdfQ==